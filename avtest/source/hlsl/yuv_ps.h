#if 0
//
// Generated by 2.0.20353.0
//
//   fxc /Fh yuv_ps.h /Tps_3_0 yuv.hlsl /EPSmain
//
//
// Parameters:
//
//   sampler2D UTexture;
//   sampler2D VTexture;
//   sampler2D YTexture;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   YTexture     s0       1
//   UTexture     s1       1
//   VTexture     s2       1
//

// Shader type: pixel 

xps_3_0
defconst UTexture, sampler2d, object, [1, 1], s1
defconst VTexture, sampler2d, object, [1, 1], s2
defconst YTexture, sampler2d, object, [1, 1], s0
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=2
// PsExportColorCount=1
// PsSampleControl=centers

dcl_texcoord r0.xy

def c252, 0, 0, 0, 0
def c253, -0.87074995, -1.08174992, 1.59599996, 2.01799989
def c254, 0.391000003, 0.813000023, 1.16400003, 0
def c255, -0.0727500021, -0.195500001, -0.406500012, 0


    exec
    tfetch2D r2.x___, r0.xy, tf2
    tfetch2D r2._x__, r0.xy, tf1
    tfetch2D r2.__x_, r0.xy, tf0
    alloc colors
    exece
    mad r0.xyz, r2.zyx, c254.zxy, c255.xyz
    mad r1.xy, r2.xy, c253.zw, c253.xy
    mad oC0.x0z1, r2.z, c254.z, r1.xy
    subs r0.w, r0.xy
    add oC0.y, r0.w, -r0.z

// PDB hint 00000000-00000000-00000000

#endif

// This microcode is in native DWORD byte order.

const DWORD g_xps_PSmain[] =
{
    0x102a1100, 0x00000110, 0x000000c4, 0x00000000, 0x00000024, 0x000000c4, 
    0x000000ec, 0x00000000, 0x00000000, 0x0000009c, 0x0000001c, 0x0000008d, 
    0xffff0300, 0x00000003, 0x0000001c, 0x00000000, 0x00000086, 0x00000058, 
    0x00030001, 0x00010000, 0x00000064, 0x00000000, 0x00000074, 0x00030002, 
    0x00010000, 0x00000064, 0x00000000, 0x0000007d, 0x00030000, 0x00010000, 
    0x00000064, 0x00000000, 0x55546578, 0x74757265, 0x00ababab, 0x0004000c, 
    0x00010001, 0x00010000, 0x00000000, 0x56546578, 0x74757265, 0x00595465, 
    0x78747572, 0x65007073, 0x5f335f30, 0x00322e30, 0x2e323033, 0x35332e30, 
    0x00ababab, 0x00000000, 0x00000001, 0x00000000, 0x00000000, 0x00000014, 
    0x01fc0010, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000040, 
    0x00000084, 0x10000200, 0x00000004, 0x00000000, 0x00000821, 0x00010001, 
    0x00000001, 0x00003050, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0xbf5ee978, 0xbf8a76c8, 0x3fcc49ba, 0x400126e9, 0x3ec83127, 0x3f5020c5, 
    0x3f94fdf4, 0x00000000, 0xbd94fdf4, 0xbe483127, 0xbed020c5, 0x00000000, 
    0x00153002, 0x00001200, 0xc4000000, 0x00005005, 0x00002200, 0x00000000, 
    0x10282001, 0x1f1ffff8, 0x00004000, 0x10182001, 0x1f1fffc7, 0x00004000, 
    0x10082001, 0x1f1ffe3f, 0x00004000, 0xc8070000, 0x0062bec0, 0x8b02feff, 
    0xc8030001, 0x00b01ab0, 0x8b02fdfd, 0xc88dc000, 0x00c6c6b0, 0xab02fe01, 
    0x64800000, 0x00000061, 0xe2000000, 0xc8028000, 0x021bc600, 0xe0000000, 
    0x00000000, 0x00000000, 0x00000000
};
